# Git commands

git commit -m <message>			- commit with message
git branch <branch>				- create new branch
git checkout <branch>			- checkout <branch>
git checkout -b <branch>		- create new branch & checkout
git merge <branch>				- merge current branch with <branch>
git push origin -d <branch>		- remove remote branch <branch>
git branch -d <branch>			- remove local branch <branch>
gir rebase <branch>				- copy current branch to <branch> and forwards to it with current branch creating a linear history
git log --graph					- git tree view in CLI
git checkout <branch>^			- move up one commit from <branch>
git checkout <branch>~<num>		- move <num> amount of commit from <branch>
git branch -f <branch> <ref>	- force move <branch> to <ref>
git remote add origin <link>	- add remote repository named origin
git push -u origin <branch>		- pushed branch to origin, -u flag adds upstream (tracking) reference {https://stackoverflow.com/questions/18867824/what-does-the-u-flag-mean-in-git-push-u-origin-master}
git reset <ref>					- git reset current branch to <ref>
git revert <ref>				- creates a commit on current branch that reverts the commit specified by <ref> by applying the invers diff
git cherry-pick <ref1> <ref2>	- copy <ref1> and <ref2> on top of the current branch
git describe <ref>				- <tag>_<numCommits>_g<hash>: Describes the closest ancestor tag in history, numCommits is how many commits away that tag is, and <hash> is the hash of the commit being described.
git pull						- git fetch & git merge
git pull --rebase				- git fetch & git rebase

# GitBash

echo $RANDOM >> entropy/01.txt	- generate entropy